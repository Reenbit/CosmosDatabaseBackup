{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "svcPlanName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the App Service plan."
      }
    },
    "metricResourceId": {
      "type": "string",
      "metadata": {
        "description": "The id of the target resource whose specified metric will be sampled"
      }
    },
    "minimumCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
      }
    },
    "maximumCapacity": {
      "type": "int",
      "defaultValue": 10,
      "metadata": {
        "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
      }
    },
    "defaultCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
      }
    },
    "metricName": {
      "type": "string",
      "defaultValue": "CpuPercentage",
      "metadata": {
        "description": "The metric name."
      }
    },
    "metricThresholdToScaleOut": {
      "type": "int",
      "defaultValue": 70,
      "metadata": {
        "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
      }
    },
    "metricThresholdToScaleIn": {
      "type": "int",
      "defaultValue": 60,
      "metadata": {
        "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
      }
    },
    "changeScaleOut": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
      }
    },
    "changeScaleIn": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
      }
    },
    "coolDown": {
      "type": "string",
      "defaultValue": "PT5M",
      "metadata": {
        "description": "The amount of time to wait after a scale operation before scaling again. For example, if cooldown = 'PT10M', Autoscale does not attempt to scale again for another 10 minutes. The cooldown is to allow the metrics to stabilize after the addition or removal of instances."
      }
    },
    "autoscaleEnabled": {
      "type": "bool",
      "metadata": {
        "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
      },
      "defaultValue": true
    }
  },
  "variables": {
    "settingName": "[concat(toLower(parameters('svcPlanName')), '-setting')]",
    "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', parameters('svcPlanName'))]",
    "metricResourceId": "[if(not(empty(parameters('metricResourceId'))), parameters('metricResourceId'), variables('targetResourceId'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/autoscalesettings",
      "name": "[variables('settingName')]",
      "dependsOn": [],
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "profiles": [
          {
            "name": "DefaultAutoscaleProfile",
            "capacity": {
              "minimum": "[parameters('minimumCapacity')]",
              "maximum": "[parameters('maximumCapacity')]",
              "default": "[parameters('defaultCapacity')]"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('metricResourceId')]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": "[parameters('metricThresholdToScaleOut')]"
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ExactCount",
                  "value": "[parameters('changeScaleOut')]",
                  "cooldown": "[parameters('coolDown')]"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "[parameters('metricName')]",
                  "metricNamespace": "",
                  "metricResourceUri": "[variables('metricResourceId')]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "LessThanOrEqual",
                  "threshold": "[parameters('metricThresholdToScaleIn')]"
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ExactCount",
                  "value": "[parameters('changeScaleIn')]",
                  "cooldown": "[parameters('coolDown')]"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('autoscaleEnabled')]",
        "targetResourceUri": "[variables('targetResourceId')]"
      }
    }
  ],
  "outputs": {
  }
}