{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant Id for the subscription and use assigned access to the vault."
      }
    },
    "accessPolicies": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Access policies object {\"tenantId\":\"\",\"objectId\":\"\",\"permissions\":{\"keys\":[\"\"],\"secrets\":[\"\"]}}"
      }
    },
    "vaultSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enabledForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for VM or Service Fabric deployment"
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for ARM template deployment"
      }
    },
    "enableVaultForVolumeEncryption": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Specifies if the vault is enabled for volume encryption"
      }
    },
    "secretsObject": {
      "type": "secureObject",
      "defaultValue": "{}",
      "metadata": {
        "description": "all secrets {\"secretName\":\"\",\"secretValue\":\"\"} wrapped in a secure object"
      }
    },
    "diagnosticsEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Flag indicating whether diagnostics are enabled or not"
      }
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the Storage Account in which Diagnostic Logs should be saved."
      }
    },
    "diagnosticsRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "The number of day to retain logs for"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "addDeveloperAccessPolicy": {
      "type": "bool",
      "defaultValue": false
    },
    "developersAadGroupObjectId": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "developerAccessPolicies": [
      {
        "tenantId": "[subscription().tenantId]",
        "objectId": "[parameters('developersAadGroupObjectId')]",
        "permissions": {
          "secrets": [ "all" ],
          "keys": [ "all" ]
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "enabledForVolumeEncryption": "[parameters('enableVaultForVolumeEncryption')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": "[if(parameters('addDeveloperAccessPolicy'), concat(parameters('accessPolicies'), variables('developerAccessPolicies')), parameters('accessPolicies'))]",
        "sku": {
          "name": "[parameters('vaultSku')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "condition": "[and(parameters('diagnosticsEnabled'), not(empty(parameters('logAnalyticsWorkspaceName'))))]",
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
          ],
          "apiVersion": "2015-07-01",
          "properties": {
            "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName'))]",
            "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
            "logs": [
              {
                "category": "AuditEvent",
                "enabled": "[parameters('diagnosticsEnabled')]",
                "retentionPolicy": {
                  "days": "[parameters('diagnosticsRetentionDays')]",
                  "enabled": true
                }
              }
            ]
          }
        }
      ]
    },
    {
      "condition": "[not(and(equals(length(parameters('secretsObject').secrets), 1), equals(parameters('secretsObject').secrets[0].secretName, 'ignore')))]",
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(parameters('keyVaultName'), '/', parameters('secretsObject').secrets[copyIndex()].secretName)]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[parameters('secretsObject').secrets[copyIndex()].secretValue]"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
      ],
      "copy": {
        "name": "secretsCopy",
        "count": "[length(parameters('secretsObject').secrets)]"
      }
    }
  ]
}